@model CleanArchitecture.Application.DTOs.ProductDto

@{
    ViewData["Title"] = "Product Details";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h2 class="mb-0">@ViewData["Title"]</h2>
                <div>
                    @if (Model.IsAvailable)
                    {
                        <span class="badge bg-success fs-6">Available</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary fs-6">Unavailable</span>
                    }
                    @if (Model.IsInStock)
                    {
                        <span class="badge bg-info fs-6">In Stock</span>
                    }
                    else
                    {
                        <span class="badge bg-warning fs-6">Out of Stock</span>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Name:</dt>
                            <dd class="col-sm-8"><strong>@Model.Name</strong></dd>

                            <dt class="col-sm-4">Price:</dt>
                            <dd class="col-sm-8">
                                <span class="h5 text-success">@Model.Price.ToString("C")</span>
                            </dd>

                            <dt class="col-sm-4">Category:</dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.Category))
                                {
                                    <span class="badge bg-info">@Model.Category</span>
                                }
                                else
                                {
                                    <span class="text-muted">No category</span>
                                }
                            </dd>

                            <dt class="col-sm-4">Stock:</dt>
                            <dd class="col-sm-8">
                                @if (Model.IsInStock)
                                {
                                    <span class="badge bg-success">@Model.StockQuantity units available</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Out of stock</span>
                                }
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Owner:</dt>
                            <dd class="col-sm-8">@Model.UserName</dd>

                            <dt class="col-sm-4">Status:</dt>
                            <dd class="col-sm-8">
                                @if (Model.IsAvailable)
                                {
                                    <span class="badge bg-success">Available</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Unavailable</span>
                                }
                            </dd>

                            <dt class="col-sm-4">Created:</dt>
                            <dd class="col-sm-8">@Model.CreatedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")</dd>

                            <dt class="col-sm-4">Last Updated:</dt>
                            <dd class="col-sm-8">
                                @if (Model.UpdatedAt.HasValue)
                                {
                                    @Model.UpdatedAt.Value.ToString("MMMM dd, yyyy 'at' h:mm tt")
                                }
                                else
                                {
                                    <span class="text-muted">Never updated</span>
                                }
                            </dd>
                        </dl>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <hr>
                    <div>
                        <h6>Description:</h6>
                        <p class="text-muted">@Model.Description</p>
                    </div>
                }

                <hr>

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to List
                    </a>
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning me-2">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <div class="btn-group me-2" role="group">
                            <button type="button" class="btn btn-outline-info dropdown-toggle" data-bs-toggle="dropdown">
                                <i class="fas fa-boxes"></i> Manage Stock
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <form asp-action="UpdateStock" asp-route-id="@Model.Id" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="quantity" value="10" />
                                        <button type="submit" class="dropdown-item">
                                            <i class="fas fa-plus text-success"></i> Add 10 units
                                        </button>
                                    </form>
                                </li>
                                <li>
                                    <form asp-action="UpdateStock" asp-route-id="@Model.Id" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="quantity" value="5" />
                                        <button type="submit" class="dropdown-item">
                                            <i class="fas fa-plus text-success"></i> Add 5 units
                                        </button>
                                    </form>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <form asp-action="UpdateStock" asp-route-id="@Model.Id" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="quantity" value="-5" />
                                        <button type="submit" class="dropdown-item" 
                                                onclick="return confirm('Are you sure you want to remove 5 units?')">
                                            <i class="fas fa-minus text-warning"></i> Remove 5 units
                                        </button>
                                    </form>
                                </li>
                                <li>
                                    <form asp-action="UpdateStock" asp-route-id="@Model.Id" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="quantity" value="-10" />
                                        <button type="submit" class="dropdown-item" 
                                                onclick="return confirm('Are you sure you want to remove 10 units?')">
                                            <i class="fas fa-minus text-warning"></i> Remove 10 units
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
}
